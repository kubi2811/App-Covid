/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Form;

import Connect.JDBCConnection;
import Dao.GoiHangDao;
import Objects.ChiTietGoiHang;
import Objects.GoiHang;
import Objects.TaiKhoan;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.List;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author ranco
 */
public class QuanLyGoiHang extends javax.swing.JFrame {
    String maNV;
    public String getMaNV() {
        return maNV;
    }
    public void setMaNV(String maNV) {
        this.maNV = maNV;
    }
    String tenNV;
    public String getTenNV() {
        return tenNV;
    }
    public void setTenNV(String tenNV) {
        this.tenNV = tenNV;
    }
//    List<HoaDon> hdList = new ArrayList<>();
    List<TaiKhoan> tkList = new ArrayList<>();
//    List<ChiTietHoaDon> cthdList = new ArrayList<>();
    
    List<GoiHang> ghList = new ArrayList<>();
    List<ChiTietGoiHang> ctghList = new ArrayList<>();
    
    DefaultTableModel tableModel;
    Connection conn = null;
    PreparedStatement pre = null;
    ResultSet rs = null;
    /**
     * Creates new form QuanLyGoiHang
     */
    public QuanLyGoiHang() {
        initComponents();
        setResizable(false);
        setLocationRelativeTo(null);
        tableModel = (DefaultTableModel) tblDanhSach.getModel();
        donGiaSPVar.setEnabled(false);
        maSPVar.setEnabled(false);
        txtTongTien.setEditable(false);
        btnXoa.setEnabled(false);
//        txtMaNV.setEnabled(false);
        LoadTenSP();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();
        btnThoat = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        ngayHetHanVar = new com.toedter.calendar.JDateChooser();
        jLabel11 = new javax.swing.JLabel();
        tenGHVar = new javax.swing.JTextField();
        mucGioiHanVar = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        maGHVar = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        donGiaGHVar = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        donGiaSPVar = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        soLuongSPVar = new javax.swing.JTextField();
        tenSPVar = new javax.swing.JComboBox<>();
        jLabel13 = new javax.swing.JLabel();
        maSPVar = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        txtTongTien = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        btnThem = new javax.swing.JButton();
        btnReset = new javax.swing.JButton();
        btnSapXep = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        btnThemHoaDon = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDanhSach = new javax.swing.JTable();
        cbMaGH = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        lblSoLuongCon = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(0, 153, 153));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("Quản lý gói nhu yếu phẩm");

        btnBack.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnBack.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/backsmall.png"))); // NOI18N
        btnBack.setText("Quay lại menu");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        btnThoat.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnThoat.setText("Thoát");
        btnThoat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThoatActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(btnBack)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 228, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(256, 256, 256)
                .addComponent(btnThoat, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnThoat, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(btnBack))
                .addGap(0, 17, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Nhập gói nhu yếu phẩm", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N

        jLabel5.setText("Thời gian hết hạn");

        jLabel11.setText("Tên gói hàng");

        jLabel3.setText("Mức giới hạn");

        jLabel14.setText("Mã gói hàng ");

        jLabel4.setText("Đơn giá");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(18, 18, 18)
                                .addComponent(mucGioiHanVar, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel14)
                                .addGap(18, 18, 18)
                                .addComponent(maGHVar, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(55, 55, 55)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel11)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(tenGHVar)
                            .addComponent(donGiaGHVar, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(120, 120, 120)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(ngayHetHanVar, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(23, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tenGHVar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11)
                    .addComponent(maGHVar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mucGioiHanVar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(donGiaGHVar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(ngayHetHanVar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(67, 67, 67))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Nhập sản phẩm", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N

        jLabel7.setText("Tên sản phẩm");

        jLabel8.setText("Đơn giá");

        jLabel9.setText("Số lượng");

        tenSPVar.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                tenSPVarPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });

        jLabel13.setText("Mã sản phẩm");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel13)
                        .addGap(22, 22, 22))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addGap(23, 23, 23)))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(tenSPVar, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(maSPVar, javax.swing.GroupLayout.DEFAULT_SIZE, 174, Short.MAX_VALUE))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(jLabel9))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel8)))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(donGiaSPVar)
                    .addComponent(soLuongSPVar))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel13)
                            .addComponent(maSPVar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(tenSPVar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(donGiaSPVar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(soLuongSPVar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9))))
                .addContainerGap(28, Short.MAX_VALUE))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        txtTongTien.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTongTienActionPerformed(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel12.setText("Tổng tiền gói hàng");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addComponent(jLabel12)
                .addGap(34, 34, 34)
                .addComponent(txtTongTien, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(45, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTongTien, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12))
                .addContainerGap())
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        btnThem.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnThem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/them.png"))); // NOI18N
        btnThem.setText("Thêm sản phẩm vào gói");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        btnReset.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnReset.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/reset.png"))); // NOI18N
        btnReset.setText("Reset");
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        btnSapXep.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnSapXep.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/sort.png"))); // NOI18N
        btnSapXep.setText("Sắp xếp theo giá");
        btnSapXep.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSapXepActionPerformed(evt);
            }
        });

        btnXoa.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnXoa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/xoa.png"))); // NOI18N
        btnXoa.setText("Xoá gói hàng");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        btnThemHoaDon.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnThemHoaDon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/them.png"))); // NOI18N
        btnThemHoaDon.setText("Thêm gói hàng");
        btnThemHoaDon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemHoaDonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(btnReset, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addComponent(btnThemHoaDon, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnThem)
                .addGap(33, 33, 33)
                .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45)
                .addComponent(btnSapXep)
                .addGap(78, 78, 78))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnThem, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnReset, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnSapXep, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnXoa, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnThemHoaDon))
                .addContainerGap())
        );

        tblDanhSach.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        tblDanhSach.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã sản phẩm", "Tên sản phẩm", "Số lượng bán", "Đơn giá", "Thành tiền"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblDanhSach.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        tblDanhSach.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblDanhSachMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblDanhSach);

        cbMaGH.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                cbMaGHPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setText("Mã gói hàng");

        lblSoLuongCon.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(jLabel6)
                        .addGap(18, 18, 18)
                        .addComponent(cbMaGH, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(55, 55, 55)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(59, 59, 59)
                        .addComponent(lblSoLuongCon)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 134, Short.MAX_VALUE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblSoLuongCon, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cbMaGH, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel2.getAccessibleContext().setAccessibleName("Nhập gói hàng");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        StaffForm bh = new StaffForm();
        bh.setVisible(true);
        bh.setMaNV(this.getMaNV().trim());
        bh.setTenNV(this.getTenNV().trim());
        this.dispose();
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnThoatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThoatActionPerformed
        // TODO add your handling code here:
        System.exit(1);
    }//GEN-LAST:event_btnThoatActionPerformed

    private void tenSPVarPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_tenSPVarPopupMenuWillBecomeInvisible
        try {
            conn = JDBCConnection.getConnection();
            String sql = "select * from SanPham where tenSP = ?";
            pre = conn.prepareStatement(sql);
            pre.setString(1, tenSPVar.getSelectedItem().toString());
            rs = pre.executeQuery();
            while (rs.next()) {
                maSPVar.setText(rs.getString("maSP").trim());
                donGiaSPVar.setText(rs.getString("donGia").trim());
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, ex);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(rootPane, "Chưa có sản phẩm nào");
        }
        getSoluongCon();
    }//GEN-LAST:event_tenSPVarPopupMenuWillBecomeInvisible

    private void txtTongTienActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTongTienActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTongTienActionPerformed

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        // TODO add your handling code here:

        if (maSPVar.getText().isEmpty() && donGiaSPVar.getText().isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "Chọn tên sản phẩm cần thêm");
            return;
        }
        if (soLuongSPVar.getText().isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "Số lượng không được trống");
            return;
        }

        int soLuong = Integer.parseInt(soLuongSPVar.getText());
        if (soLuong <= 0) {
            JOptionPane.showMessageDialog(rootPane, "Số lượng phải lớn hơn 0");
            return;
        }
        if (soLuong > getSoLuong()) {
            JOptionPane.showMessageDialog(rootPane, "Số lượng lớn hơn số lượng hàng đang có");
            return;
        }

        try {
            String maGH = cbMaGH.getSelectedItem().toString().trim();
            String maSP = maSPVar.getText().trim();
            int soLuongBan = Integer.parseInt(soLuongSPVar.getText().trim());
            ChiTietGoiHang ctgh = new ChiTietGoiHang(maGH, maSP, soLuongBan);
            conn = JDBCConnection.getConnection();
            String sql1 = "insert into ChiTietGoiHang values(?,?,?)";
            pre = conn.prepareStatement(sql1);
            pre.setString(1, ctgh.getMaGH());
            pre.setString(2, ctgh.getMaSP());
            pre.setInt(3, ctgh.getSoLuongBan());
            int n =  pre.executeUpdate();

            if(n > 0){
                String sql2 = "update SanPham set soLuong = soLuong - ? from SanPham inner join ChiTietGoiHang on ChiTietGoiHang.maSP = SanPham.maSP where ChiTietGoiHang.maSP = ? and ChiTietGoiHang.maGH = ?";
                pre = conn.prepareStatement(sql2);
                pre.setInt(1, ctgh.getSoLuongBan());
                pre.setString(2, ctgh.getMaSP());
                pre.setString(3, ctgh.getMaGH());
                pre.executeUpdate();
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "Trùng gói hàng");
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(rootPane, "Số lượng phải là số và không trống!");
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(rootPane, "Khoá chính");
        } finally {
            if (pre != null) {
                try {
                    pre.close();
                } catch (SQLException ex) {
                    System.out.println("Lỗi: " + ex);
                }
            }
            if (conn != null) {
                try {
                    conn.close();
                } catch (SQLException ex) {
                    System.out.println("Lỗi: " + ex);
                }
            }
        }

        btnXoa.setEnabled(false);
        loadDataTable();
        tongThanhTien();
        getSoluongCon();
    }//GEN-LAST:event_btnThemActionPerformed

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        // TODO add your handling code here:
        tenGHVar.setText("");
        maGHVar.setText("");
        mucGioiHanVar.setText("");
        ngayHetHanVar.setDate(null);
        maSPVar.setText("");
        donGiaSPVar.setText("");
        soLuongSPVar.setText("");
        donGiaGHVar.setText("");
        LoadTenSP();
        btnXoa.setEnabled(false);
        
        DefaultTableModel model2 = (DefaultTableModel)tblDanhSach.getModel();
        model2.setRowCount(0);
//        txtMaNV.setText(this.getMaNV());
    }//GEN-LAST:event_btnResetActionPerformed

    private void btnSapXepActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSapXepActionPerformed
        // TODO add your handling code here:
        try {
            conn = JDBCConnection.getConnection();
            String sql = "select ChiTietGoiHang.maSP, tenSP, soLuongBan, donGia, soLuongBan * donGia as 'thanhTien'\n"
            + "from ChiTietGoiHang inner join SanPham on SanPham.maSP = ChiTietGoiHang.maSP\n"
            + "where maHD = ?\n"
            + "order by donGia\n";
            pre = conn.prepareStatement(sql);
            pre.setString(1, cbMaGH.getSelectedItem().toString().trim());
            rs = pre.executeQuery();
            tableModel.setRowCount(0);
            while (rs.next()) {
                Vector arr = new Vector();
                arr.add(rs.getString("maSP"));
                arr.add(rs.getString("tenSP"));
                arr.add(rs.getInt("soLuongBan"));
                arr.add(rs.getFloat("donGia"));
                arr.add(rs.getString("thanhTien"));
                tableModel.addRow(arr);
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, ex);
        } finally {
            if (conn != null) {
                try {
                    conn.close();
                } catch (SQLException ex) {
                    Logger.getLogger(BanHang.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
        btnXoa.setEnabled(false);
    }//GEN-LAST:event_btnSapXepActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        // TODO add your handling code here:

        try {
            conn = JDBCConnection.getConnection();
            String sql = "delete from ChiTietGoiHang where maSP = ? and maGH = ?";
            pre = conn.prepareStatement(sql);
            pre.setString(1, maSPVar.getText().trim());
            pre.setString(2, cbMaGH.getSelectedItem().toString().trim());

            pre.executeUpdate();

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(rootPane, ex);
        }
        btnXoa.setEnabled(false);
        loadDataTable();
        tongThanhTien();
    }//GEN-LAST:event_btnXoaActionPerformed

    private void btnThemHoaDonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemHoaDonActionPerformed
        // TODO add your handling code here:
        if (maGHVar.getText().isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "Mã gói hàng không được trống");
            return;
        }
        
        if (tenGHVar.getText().isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "Tên gói hàng không được trống");
            return;
        }
        
        if (mucGioiHanVar.getText().isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "Mức giới hạn không được trống");
            return;
        }
        if (ngayHetHanVar.getDate() == null) {
            JOptionPane.showMessageDialog(rootPane, "Ngày hết hạn không được trống");
            return;
        }
        if (donGiaGHVar.getText().isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "Đơn giá không được trống");
            return;
        }
        try {
            String maGH = maGHVar.getText().trim();
            String tenGH = tenGHVar.getText().trim();
            int gioiHanMua =  Integer. valueOf(mucGioiHanVar.getText().trim());
            int giaGH = Integer. valueOf(donGiaGHVar.getText().trim());

            SimpleDateFormat dateFormat = new SimpleDateFormat("MM/dd/yyyy");
            String ngayHetHan = dateFormat.format(ngayHetHanVar.getDate());

            if (checkMaGH()) {
                GoiHang themGH = new GoiHang(maGH, tenGH, gioiHanMua, ngayHetHan, giaGH);
                GoiHangDao.insertGH(themGH);
                JOptionPane.showMessageDialog(rootPane, "Thêm gói hàng thành công");
            } else {
                JOptionPane.showMessageDialog(rootPane, "Mã gói hàng không được trùng");
                return;
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(rootPane, ex);
        }
        loadMaGH();
    }//GEN-LAST:event_btnThemHoaDonActionPerformed

    private void tblDanhSachMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDanhSachMouseClicked
        // TODO add your handling code here:
        int row = tblDanhSach.getSelectedRow();
        if (row >= 0) {
            maSPVar.setText(tableModel.getValueAt(row, 0).toString().trim());
            tenSPVar.setSelectedItem(tableModel.getValueAt(row, 1).toString().trim());
            soLuongSPVar.setText(tableModel.getValueAt(row, 2).toString().trim());
            donGiaSPVar.setText(tableModel.getValueAt(row, 3).toString().trim());
        }
        btnXoa.setEnabled(true);
        getSoluongCon();
    }//GEN-LAST:event_tblDanhSachMouseClicked

    private void cbMaGHPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_cbMaGHPopupMenuWillBecomeInvisible
        //Đổ dữ liệu lên textFiel khi chọn combox MaGH
        try {
            conn = JDBCConnection.getConnection();
            String sql = "select * from GoiHang where maGH = ?";
            pre = conn.prepareStatement(sql);
            pre.setString(1, cbMaGH.getSelectedItem().toString().trim());
            rs = pre.executeQuery();
            while (rs.next()) {
                maGHVar.setText(rs.getString("maGH").toString().trim());
                tenGHVar.setText(rs.getString("tenGH").toString().trim());
                mucGioiHanVar.setText(rs.getString("gioiHanMua").toString().trim());
                ngayHetHanVar.setDate(rs.getDate("ngayHetHan"));
                donGiaGHVar.setText(rs.getString("giaGH").toString().trim());
                
            }
            loadDataTable();
            tongThanhTien();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, ex);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(rootPane, "Chưa có gói hàng nào");
        } finally {
            if (pre != null) {
                try {
                    pre.close();
                } catch (SQLException ex) {
                    Logger.getLogger(BanHang.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            if (conn != null) {
                try {
                    conn.close();
                } catch (SQLException ex) {
                    Logger.getLogger(BanHang.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
        btnXoa.setEnabled(false);
    }//GEN-LAST:event_cbMaGHPopupMenuWillBecomeInvisible

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
//        txtMaNV.setText(this.getMaNV());
        loadMaGH();
    }//GEN-LAST:event_formWindowOpened

    private boolean checkMaGH() {
        try {
            conn = JDBCConnection.getConnection();
            String sqlCheck = "SELECT maGH FROM GoiHang";
            PreparedStatement pre = conn.prepareStatement(sqlCheck);
            ResultSet rs = pre.executeQuery();
            while (rs.next()) {
                if (this.tenGHVar.getText().trim().equalsIgnoreCase(rs.getString("maGH").toString().trim())) {
                    return false;
                }
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(rootPane, ex);
        } finally {
            if (conn != null) {
                try {
                    conn.close();
                } catch (SQLException ex) {
                    Logger.getLogger(BanHang.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
        return true;
    }
    
    private void LoadTenSP() {
        tenSPVar.removeAllItems();
        try {
            conn = JDBCConnection.getConnection();
            String sql = "select tenSP from SanPham";
            pre = conn.prepareStatement(sql);
            rs = pre.executeQuery();
            while (rs.next()) {
                tenSPVar.addItem(rs.getString("tenSP").trim());
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, ex);
        }
    }
    
    private int getSoLuong() {
        int soluong = 0;
        try {
            conn = JDBCConnection.getConnection();
            String sql = "select soLuong from SanPham where maSP = ?";

            pre = conn.prepareStatement(sql);
            pre.setString(1, maSPVar.getText());
            rs = pre.executeQuery();
            while (rs.next()) {
                soluong = rs.getInt("soLuong");
            }

        } catch (SQLException ex) {
            System.out.println("Lỗi: " + ex);
        } finally {
            if (pre != null) {
                try {
                    pre.close();
                } catch (SQLException ex) {
                    System.out.println("Lỗi: " + ex);
                }
            }
            if (conn != null) {
                try {
                    conn.close();
                } catch (SQLException ex) {
                    System.out.println("Lỗi: " + ex);
                }
            }
        }
        return soluong;
    }

    private void getSoluongCon() {

        try {
            conn = JDBCConnection.getConnection();
            String sql = "select soLuong from SanPham where maSP = ?";

            pre = conn.prepareStatement(sql);
            pre.setString(1, maSPVar.getText());
            rs = pre.executeQuery();
            while (rs.next()) {
                lblSoLuongCon.setText("Số lượng còn: " + rs.getInt("soLuong"));
            }

        } catch (SQLException ex) {
            System.out.println("Lỗi: " + ex);
        } finally {
            if (pre != null) {
                try {
                    pre.close();
                } catch (SQLException ex) {
                    System.out.println("Lỗi: " + ex);
                }
            }
            if (conn != null) {
                try {
                    conn.close();
                } catch (SQLException ex) {
                    System.out.println("Lỗi: " + ex);
                }
            }
        }

    }
    private void loadDataTable() {
        try {
            conn = JDBCConnection.getConnection();
            String sql = "select ChiTietGoiHang.maSP, tenSP, soLuongBan, donGia, soLuongBan * donGia as 'thanhTien'\n"
                    + "from ChiTietGoiHang inner join SanPham on SanPham.maSP = ChiTietGoiHang.maSP\n"
                    + "where maGH = ?";
            pre = conn.prepareStatement(sql);
            pre.setString(1, cbMaGH.getSelectedItem().toString().trim());
            rs = pre.executeQuery();
            tableModel.setRowCount(0);
            while (rs.next()) {

                Vector arr = new Vector();
                arr.add(rs.getString("maSP"));
                arr.add(rs.getString("tenSP"));
                arr.add(rs.getInt("soLuongBan"));
                arr.add(rs.getFloat("donGia"));
                arr.add(rs.getString("thanhTien"));

                tableModel.addRow(arr);

            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, ex);
        } finally {
            if (conn != null) {
                try {
                    conn.close();
                } catch (SQLException ex) {
                    Logger.getLogger(BanHang.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }
    private void tongThanhTien() {
        try {
            conn = JDBCConnection.getConnection();
            String sql = "select sum(soLuongBan * donGia) as 'thanhTien'\n"
                    + "from ChiTietGoiHang inner join SanPham on SanPham.maSP = ChiTietGoiHang.maSP\n"
                    + "where maGH = ?";
            pre = conn.prepareStatement(sql);
            pre.setString(1, cbMaGH.getSelectedItem().toString().trim());
            rs = pre.executeQuery();
            while (rs.next()) {
                txtTongTien.setText(String.valueOf(rs.getFloat("thanhTien")));
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, ex);
        } finally {
            if (conn != null) {
                try {
                    conn.close();
                } catch (SQLException ex) {
                    Logger.getLogger(BanHang.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }
    private void loadMaGH() {
        Connection conn = null;
        PreparedStatement pre = null;
        ResultSet rs = null;
        cbMaGH.removeAllItems();
        try {
            conn = JDBCConnection.getConnection();
            String sql = "select * from GoiHang";
            pre = conn.prepareStatement(sql);
//            pre.setString(1, maGHVar.getText().trim());
            rs = pre.executeQuery();
            while (rs.next()) {
                cbMaGH.addItem(rs.getString("maGH").trim());
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, ex);
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(QuanLyGoiHang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(QuanLyGoiHang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(QuanLyGoiHang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(QuanLyGoiHang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new QuanLyGoiHang().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btnSapXep;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnThemHoaDon;
    private javax.swing.JButton btnThoat;
    private javax.swing.JButton btnXoa;
    private javax.swing.JComboBox<String> cbMaGH;
    private javax.swing.JTextField donGiaGHVar;
    private javax.swing.JTextField donGiaSPVar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblSoLuongCon;
    private javax.swing.JTextField maGHVar;
    private javax.swing.JTextField maSPVar;
    private javax.swing.JTextField mucGioiHanVar;
    private com.toedter.calendar.JDateChooser ngayHetHanVar;
    private javax.swing.JTextField soLuongSPVar;
    private javax.swing.JTable tblDanhSach;
    private javax.swing.JTextField tenGHVar;
    private javax.swing.JComboBox<String> tenSPVar;
    private javax.swing.JTextField txtTongTien;
    // End of variables declaration//GEN-END:variables
}
